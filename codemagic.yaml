workflows:
  ios-workflow:
    name: iOS workflow
    environment:
      ios_signing:
        distribution_type: development
        bundle_identifier: com.theseaing.lab
      xcode: latest # <-- set to specific version e.g. 14.3, 15.0 to avoid unexpected updates.
      #node: v16.14.2
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          npm install -g cordova
          npm install -g @quasar/cli 
          npm install
      - name: Setup iOS
        script: |
          quasar build -m ios --skip-pkg
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Build iOS
        script: |
          package_type=$(defaults read ~/export_options.plist method)
          identity=$(defaults read ~/export_options.plist signingCertificate)
          team=$(defaults read ~/export_options.plist teamID)
          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")
        
          cat <<EOF > build.json
              {
                "ios": {
                  "release": {
                    "buildFlag": ["CODE_SIGN_IDENTITY=\"\"","CODE_SIGNING_REQUIRED=NO","CODE_SIGNING_ALLOWED=NO"],
                    "codeSignIdentity": "",
                    "developmentTeam": "$team",
                    "packageType": "$package_type",
                    "provisioningProfile": ""
                  }
                }
              }
          EOF
      - name: Build iOS 2
        script: |
          cd src-cordova
          quasar build -m ios -- --and --buildConfig='../build.json' --here || true
          #cordova prepare ios --buildFlag=-UseModernBuildSystem=0
      - name: Build iOS 2.1
        script: |
          cd src-cordova
          pwd
          mv index2.html www/
          cordova build ios --release --device --buildConfig='../build.json' || true
          cd platforms/ios/SeaingLabQ.xcarchive/Products/
          mv Applications Payload
          zip SeaingLabQ-unsigned.zip Payload
          mv SeaingLabQ-unsigned.zip SeaingLabQ-unsigned.ipa
          mkdir -p ../../build/Release-iphoneos/
          mv SeaingLabQ-unsigned.ipa ../../build/Release-iphoneos/
          ls -lp $CM_BUILD_DIR/src-cordova/platforms/ios/build/Release-iphoneos/
      - name: Build iOS 3
        script: |
          quasar build -m ios || true
    artifacts:
      - src-cordova/platforms/ios/build/Release-iphoneos/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - build.json
      - src-cordova/platforms/ios/build/**/*.app


  android-workflow:
    name: Android workflow
    environment:
      android_signing:
        - CST
      groups:
        - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS - Put your google-services.json here)
      xcode: latest
      #node: 12
      #npm: 6
      #java: 1.8
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install dependencies
        script: |
          export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
          $ANDROID_SDK_ROOT/tools/bin/sdkmanager --install "build-tools;33.0.2"
          npm install -g cordova
          npm install -g @quasar/cli 
          npm install
      - name: Add Android platform
        script: |
          quasar build -m ios --skip-pkg
      - name: Build Android
        script: |    
          cd src-cordova
          cordova build android --release --device --no-interactive --prod 
      - name: Build Android 2
        script: |    
          set -x
          set -e
          android-app-bundle build-universal-apk \
            --bundle "$CM_BUILD_DIR/src-cordova/platforms/android/app/build/outputs/bundle/release/app-release.aab" \
            --ks $CM_KEYSTORE_PATH \
            --ks-pass $CM_KEYSTORE_PASSWORD \
            --ks-key-alias $CM_KEY_ALIAS \
            --key-pass $CM_KEY_PASSWORD
          #APK_PATH=$(find platforms/android/app/build/outputs/apk/release -name "*.apk" | head -1)
          #jarsigner \
          #  -sigalg SHA1withRSA \
          #  -digestalg SHA1 \
          #  -keystore $CM_KEYSTORE_PATH \
          #  -storepass $CM_KEYSTORE_PASSWORD \
          #  -keypass $CM_KEY_PASSWORD \
          #  $APK_PATH $CM_KEY_ALIAS 
    artifacts:
      - src-cordova/platforms/android/app/build/outputs/**/*.apk
      - src-cordova/platforms/android/app/build/outputs/**/mapping.txt
